name: awsproductsUpdater

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  schedule:
    - cron: "0 0 * * 0"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Generate AWS Product Markdown
        run: |
          #!/bin/bash

          # Define the URL
          url='https://aws.amazon.com/api/dirs/items/search?item.directoryId=aws-products&sort_by=item.additionalFields.productCategory&sort_order=asc&size=500&item.locale=en_US&tags.id=!aws-products%23type%23feature&tags.id=!aws-products%23type%23variant'

          # Use curl to fetch data from the URL and store it in a variable
          data=$(curl -s "$url")

          # Check if curl was successful
          if [ $? -ne 0 ]; then
            echo "Error: Failed to fetch data from the URL."
            exit 1
          fi

          markdown_file="awsproducts.md"
          markdown_content="<!--
          marp: true
          title: AWS Products
          theme: default
          class:
          - invert
          paginate: true
          -->

          <!-- paginate: skip -->
          # AWS Products
          Generated from https://aws.amazon.com/products
          <!-- footer: Last updated $(date) -->

          ---
          <!-- paginate: true -->
          <!-- footer: '' -->
          "
          echo -e "$markdown_content" > "$markdown_file"

          # TOC
          markdown_content="
          <!-- header: '' -->

          ## Product Categories
          "
          echo -e "$markdown_content" >> "$markdown_file"

          markdown_content=$(echo $data | \
            jq -r '.items | group_by(.item.additionalFields.productCategory)[] | .[0] | "[\(.item.additionalFields.productCategory)](#\(.item.additionalFields.productNameLowercase | gsub(" ";"-") | gsub("\\(";"") | gsub("\\)";"") ))"' | \
            sed '0~10 s/$/\n\n---\n\nProduct Categories (continued...)\n/g'
            )
          markdown_content+="\n\n---\n"

          echo -e "$markdown_content" >> "$markdown_file"

          # Data
          markdown_content=$(echo $data | \
            sed -e 's/\\u003cp\\u003e//g; s/\\u003c\/p\\u003e//g; s/\\r//g; s/\\n//g; s/\/?did\\u003dap_card\\u0026trk\\u003dap_card//g; s/?did\\u003dap_card\\u0026trk\\u003dap_card//g; s/\\u0026nbsp\;//g;' | \
            jq -r '.items[] | "<!-- header: \(.item.additionalFields.productCategory) -->", "## \(.item.additionalFields.productName)","\(.item.additionalFields.productSummary)", "\(.item.additionalFields.productUrl)","\n_Launched \(.item.additionalFields.launchDate)_", "\n---" ' | \
            sed '$d')

          echo -e "$markdown_content" >> "$markdown_file"

          echo "Markdown file '$markdown_file' has been created."

      - name: Ensure build dir exists
        run: mkdir -p build

      - name: Marp Build (awsproducts)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: awsproducts.md -o build/index.html
        env:
          MARP_USER: root:root

      - name: Marp Build (awsproducts.pdf)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: awsproducts.md --allow-local-files -o build/awsproducts.pdf
        env:
          MARP_USER: root:root

      - name: Marp Build (awsproducts.pptx)
        uses: docker://marpteam/marp-cli:v3.0.2
        with:
          args: awsproducts.md --allow-local-files -o build/awsproducts.pptx
        env:
          MARP_USER: root:root

      - name: Deploy preview
        if: ${{ github.event_name == 'pull_request' }}
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./build/
          preview-branch: gh-pages
          umbrella-dir: pr-preview

      - name: Deploy production
        if: ${{ github.event_name == 'push' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./build/
          clean-exclude: pr-preview/
